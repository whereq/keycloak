{"version":3,"file":"AccountPage.js","names":["React","ActionGroup","Button","Form","FormGroup","TextInput","InputGroup","Grid","GridItem","ExpandableSection","ValidatedOptions","PageSection","PageSectionVariants","Text","TextVariants","TextContent","AccountServiceContext","Msg","ContentPage","ContentAlert","LocaleSelector","KeycloakContext","AIACommand","ExternalLinkSquareAltIcon","AccountPage","Component","constructor","props","context","_defineProperty","features","isRegistrationEmailAsUsername","isEditUserNameAllowed","deleteAccountAllowed","updateEmailFeatureEnabled","updateEmailActionEnabled","errors","username","firstName","lastName","email","formFields","attributes","DEFAULT_STATE","fetchPersonalInfo","value","event","target","currentTarget","name","setState","state","validationMessage","preventDefault","form","isValid","checkValidity","reqData","doPost","then","success","locale","window","location","reload","formData","FormData","validationMessages","Array","from","keys","reduce","acc","key","elements","keycloak","execute","createElement","isRequired","type","id","maxLength","onChange","handleChange","validated","error","default","isReadOnly","doGet","response","data","render","fields","title","introMessage","isFilled","variant","light","className","component","small","localize","onSubmit","handleSubmit","undefined","label","fieldId","helperTextInvalid","UsernameInput","RestrictedUsernameInput","isUpdateEmailFeatureEnabled","isDisabled","isUpdateEmailActionEnabled","Consumer","onClick","handleEmailUpdate","icon","iconPosition","msgKey","isInternationalizationEnabled","Object","values","filter","e","length","handleCancel","isDeleteAccountAllowed","style","marginTop","toggleText","hasGutter","span","handleDelete"],"sources":["../../../src/app/content/account-page/AccountPage.tsx"],"sourcesContent":["/*\r\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport * as React from 'react';\r\nimport { ActionGroup,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    TextInput,\r\n    InputGroup,\r\n    Grid,\r\n    GridItem,\r\n    ExpandableSection,\r\n    ValidatedOptions,\r\n    PageSection,\r\n    PageSectionVariants,\r\n    Text,\r\n    TextVariants,\r\n    TextContent\r\n} from '@patternfly/react-core';\r\n\r\nimport { HttpResponse } from '../../account-service/account.service';\r\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\r\nimport { Features } from '../../widgets/features';\r\nimport { Msg } from '../../widgets/Msg';\r\nimport { ContentPage } from '../ContentPage';\r\nimport { ContentAlert } from '../ContentAlert';\r\nimport { LocaleSelector } from '../../widgets/LocaleSelectors';\r\nimport { KeycloakContext } from '../../keycloak-service/KeycloakContext';\r\nimport { KeycloakService } from '../../keycloak-service/keycloak.service';\r\nimport { AIACommand } from '../../util/AIACommand';\r\nimport {ExternalLinkSquareAltIcon} from \"@patternfly/react-icons\";\r\n\r\ndeclare const features: Features;\r\ndeclare const locale: string;\r\n\r\ninterface AccountPageProps {\r\n}\r\n\r\ninterface FormFields {\r\n    readonly username?: string;\r\n    readonly firstName?: string;\r\n    readonly lastName?: string;\r\n    readonly email?: string;\r\n    attributes?: { locale?: [string] };\r\n}\r\n\r\ninterface AccountPageState {\r\n    readonly errors: FormFields;\r\n    readonly formFields: FormFields;\r\n}\r\n\r\n/**\r\n * @author Stan Silvert ssilvert@redhat.com (C) 2018 Red Hat Inc.\r\n */\r\nexport class AccountPage extends React.Component<AccountPageProps, AccountPageState> {\r\n    static contextType = AccountServiceContext;\r\n    context: React.ContextType<typeof AccountServiceContext>;\r\n    private isRegistrationEmailAsUsername: boolean = features.isRegistrationEmailAsUsername;\r\n    private isEditUserNameAllowed: boolean = features.isEditUserNameAllowed;\r\n    private isDeleteAccountAllowed: boolean = features.deleteAccountAllowed;\r\n    private isUpdateEmailFeatureEnabled: boolean = features.updateEmailFeatureEnabled;\r\n    private isUpdateEmailActionEnabled: boolean = features.updateEmailActionEnabled;\r\n    private readonly DEFAULT_STATE: AccountPageState = {\r\n        errors: {\r\n            username: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: ''\r\n        },\r\n        formFields: {\r\n            username: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            attributes: {}\r\n        }\r\n    };\r\n\r\n    public state: AccountPageState = this.DEFAULT_STATE;\r\n\r\n    public constructor(props: AccountPageProps, context: React.ContextType<typeof AccountServiceContext>) {\r\n        super(props);\r\n        this.context = context;\r\n\r\n        this.fetchPersonalInfo();\r\n    }\r\n\r\n    private fetchPersonalInfo(): void {\r\n        this.context!.doGet<FormFields>(\"/\")\r\n            .then((response: HttpResponse<FormFields>) => {\r\n                this.setState(this.DEFAULT_STATE);\r\n                const formFields = response.data;\r\n                if (!formFields!.attributes) {\r\n                    formFields!.attributes = { locale: [locale] };\r\n                }\r\n                else if (!formFields!.attributes.locale) {\r\n                    formFields!.attributes.locale = [locale];\r\n                }\r\n\r\n                this.setState({...{ formFields: formFields as FormFields }});\r\n            });\r\n    }\r\n\r\n    private handleCancel = (): void => {\r\n        this.fetchPersonalInfo();\r\n    }\r\n\r\n    private handleChange = (value: string, event: React.FormEvent<HTMLInputElement>) => {\r\n        const target = event.currentTarget;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            errors: { ...this.state.errors, [name]: target.validationMessage },\r\n            formFields: { ...this.state.formFields, [name]: value }\r\n        });\r\n    }\r\n\r\n    private handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n        event.preventDefault();\r\n        const form = event.target as HTMLFormElement;\r\n        const isValid = form.checkValidity();\r\n        if (isValid) {\r\n            const reqData: FormFields = { ...this.state.formFields };\r\n            this.context!.doPost<void>(\"/\", reqData)\r\n                .then(() => {\r\n                    ContentAlert.success('accountUpdatedMessage');\r\n                    if (locale !== this.state.formFields.attributes!.locale![0]) {\r\n                        window.location.reload();\r\n                    }\r\n                });\r\n        } else {\r\n            const formData = new FormData(form);\r\n            const validationMessages = Array.from(formData.keys()).reduce((acc, key) => {\r\n                acc[key] = form.elements[key].validationMessage\r\n                return acc\r\n            }, {});\r\n            this.setState({\r\n                errors: { ...validationMessages },\r\n                formFields: this.state.formFields\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private handleDelete = (keycloak: KeycloakService): void => {\r\n        new AIACommand(keycloak, \"delete_account\").execute();\r\n    }\r\n\r\n    private handleEmailUpdate = (keycloak: KeycloakService): void => {\r\n        new AIACommand(keycloak, \"UPDATE_EMAIL\").execute();\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        const fields: FormFields = this.state.formFields;\r\n        return (\r\n            <ContentPage\r\n                title=\"personalInfoHtmlTitle\"\r\n                introMessage=\"personalSubMessage\"\r\n            >\r\n                <PageSection isFilled variant={PageSectionVariants.light}>\r\n                    <TextContent className=\"pf-u-mb-lg\">\r\n                        <Text component={TextVariants.small}>\r\n                          {Msg.localize('allFieldsRequired')}\r\n                        </Text>\r\n                    </TextContent>\r\n                    <Form\r\n                        onSubmit={(event) => this.handleSubmit(event)}\r\n                        className=\"personal-info-form\"\r\n                    >\r\n                        {!this.isRegistrationEmailAsUsername && fields.username != undefined && (\r\n                            <FormGroup\r\n                                label={Msg.localize(\"username\")}\r\n                                fieldId=\"user-name\"\r\n                                helperTextInvalid={this.state.errors.username}\r\n                                validated={\r\n                                    this.state.errors.username !== \"\"\r\n                                        ? ValidatedOptions.error\r\n                                        : ValidatedOptions.default\r\n                                }\r\n                            >\r\n                                {this.isEditUserNameAllowed && <this.UsernameInput />}\r\n                                {!this.isEditUserNameAllowed && (\r\n                                    <this.RestrictedUsernameInput />\r\n                                )}\r\n                            </FormGroup>\r\n                        )}\r\n                        {!this.isUpdateEmailFeatureEnabled && <FormGroup\r\n                            label={Msg.localize('email')}\r\n                            fieldId=\"email-address\"\r\n                            helperTextInvalid={this.state.errors.email}\r\n                            validated={\r\n                                this.state.errors.email !== \"\"\r\n                                    ? ValidatedOptions.error\r\n                                    : ValidatedOptions.default\r\n                            }\r\n                        >\r\n                            <TextInput\r\n                                isRequired\r\n                                type=\"email\"\r\n                                id=\"email-address\"\r\n                                name=\"email\"\r\n                                maxLength={254}\r\n                                value={fields.email}\r\n                                onChange={this.handleChange}\r\n                                validated={\r\n                                    this.state.errors.email !== \"\"\r\n                                        ? ValidatedOptions.error\r\n                                        : ValidatedOptions.default\r\n                                }\r\n                            ></TextInput>\r\n                        </FormGroup> }\r\n                        {this.isUpdateEmailFeatureEnabled && <FormGroup\r\n                            label={Msg.localize('email')}\r\n                            fieldId=\"email-address\"\r\n                        >\r\n                            <InputGroup>\r\n                                <TextInput\r\n                                    isDisabled\r\n                                    type=\"email\"\r\n                                    id=\"email-address\"\r\n                                    name=\"email\"\r\n                                    value={fields.email}\r\n                                >\r\n                                </TextInput>\r\n                                {this.isUpdateEmailActionEnabled && (!this.isRegistrationEmailAsUsername || this.isEditUserNameAllowed) &&\r\n                                    <KeycloakContext.Consumer>\r\n                                        { (keycloak) => (\r\n                                            <Button id=\"update-email-btn\"\r\n                                                    variant=\"link\"\r\n                                                    onClick={() => this.handleEmailUpdate(keycloak!)}\r\n                                                    icon={<ExternalLinkSquareAltIcon/>}\r\n                                                    iconPosition=\"right\">\r\n                                                <Msg msgKey=\"updateEmail\" />\r\n                                            </Button>\r\n                                        )}\r\n                                    </KeycloakContext.Consumer>\r\n                                }\r\n                            </InputGroup>\r\n                        </FormGroup> }\r\n                        <FormGroup\r\n                            label={Msg.localize(\"firstName\")}\r\n                            fieldId=\"first-name\"\r\n                            helperTextInvalid={this.state.errors.firstName}\r\n                            validated={\r\n                                this.state.errors.firstName !== \"\"\r\n                                    ? ValidatedOptions.error\r\n                                    : ValidatedOptions.default\r\n                            }\r\n                        >\r\n                            <TextInput\r\n                                isRequired\r\n                                type=\"text\"\r\n                                id=\"first-name\"\r\n                                name=\"firstName\"\r\n                                maxLength={254}\r\n                                value={fields.firstName}\r\n                                onChange={this.handleChange}\r\n                                validated={\r\n                                    this.state.errors.firstName !== \"\"\r\n                                        ? ValidatedOptions.error\r\n                                        : ValidatedOptions.default\r\n                                }\r\n                            ></TextInput>\r\n                        </FormGroup>\r\n                        <FormGroup\r\n                            label={Msg.localize(\"lastName\")}\r\n                            fieldId=\"last-name\"\r\n                            helperTextInvalid={this.state.errors.lastName}\r\n                            validated={\r\n                                this.state.errors.lastName !== \"\"\r\n                                    ? ValidatedOptions.error\r\n                                    : ValidatedOptions.default\r\n                            }\r\n                        >\r\n                            <TextInput\r\n                                isRequired\r\n                                type=\"text\"\r\n                                id=\"last-name\"\r\n                                name=\"lastName\"\r\n                                maxLength={254}\r\n                                value={fields.lastName}\r\n                                onChange={this.handleChange}\r\n                                validated={\r\n                                    this.state.errors.lastName !== \"\"\r\n                                        ? ValidatedOptions.error\r\n                                        : ValidatedOptions.default\r\n                                }\r\n                            ></TextInput>\r\n                        </FormGroup>\r\n                        {features.isInternationalizationEnabled && (\r\n                            <FormGroup\r\n                                label={Msg.localize(\"selectLocale\")}\r\n                                isRequired\r\n                                fieldId=\"locale\"\r\n                            >\r\n                                <LocaleSelector\r\n                                    id=\"locale-selector\"\r\n                                    value={fields.attributes!.locale || \"\"}\r\n                                    onChange={(value) =>\r\n                                        this.setState({\r\n                                            errors: this.state.errors,\r\n                                            formFields: {\r\n                                                ...this.state.formFields,\r\n                                                attributes: {\r\n                                                    ...this.state.formFields.attributes,\r\n                                                    locale: [value],\r\n                                    },\r\n                                    },\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </FormGroup>\r\n                        )}\r\n                        <ActionGroup>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                id=\"save-btn\"\r\n                                variant=\"primary\"\r\n                                isDisabled={\r\n                                    Object.values(this.state.errors).filter((e) => e !== \"\")\r\n                                    .length !== 0\r\n                                }\r\n                            >\r\n                                <Msg msgKey=\"doSave\" />\r\n                            </Button>\r\n                            <Button\r\n                                id=\"cancel-btn\"\r\n                                variant=\"link\"\r\n                                onClick={this.handleCancel}\r\n                            >\r\n                                <Msg msgKey=\"doCancel\" />\r\n                            </Button>\r\n                        </ActionGroup>\r\n                    </Form>\r\n\r\n            {this.isDeleteAccountAllowed && (\r\n                <div id=\"delete-account\" style={{ marginTop: \"30px\" }}>\r\n                    <ExpandableSection toggleText={Msg.localize(\"deleteAccount\")}>\r\n                        <Grid hasGutter>\r\n                            <GridItem span={6}>\r\n                                <p>\r\n                                    <Msg msgKey=\"deleteAccountWarning\" />\r\n                                </p>\r\n                            </GridItem>\r\n                            <GridItem span={4}>\r\n                                <KeycloakContext.Consumer>\r\n                                    {(keycloak) => (\r\n                                        <Button\r\n                                            id=\"delete-account-btn\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() => this.handleDelete(keycloak!)}\r\n                                            className=\"delete-button\"\r\n                                        >\r\n                                            <Msg msgKey=\"doDelete\" />\r\n                                        </Button>\r\n                                    )}\r\n                                </KeycloakContext.Consumer>\r\n                            </GridItem>\r\n                            <GridItem span={2}></GridItem>\r\n                        </Grid>\r\n                    </ExpandableSection>\r\n                </div>\r\n            )}\r\n            </PageSection>\r\n        </ContentPage>\r\n        );\r\n    }\r\n\r\n    private UsernameInput = () => (\r\n        <TextInput\r\n            isRequired\r\n            type=\"text\"\r\n            id=\"user-name\"\r\n            name=\"username\"\r\n            maxLength={254}\r\n            value={this.state.formFields.username}\r\n            onChange={this.handleChange}\r\n            validated={this.state.errors.username !== '' ? ValidatedOptions.error : ValidatedOptions.default}\r\n            >\r\n        </TextInput>\r\n    );\r\n\r\n    private RestrictedUsernameInput = () => (\r\n        <TextInput\r\n            isReadOnly\r\n            type=\"text\"\r\n            id=\"user-name\"\r\n            name=\"username\"\r\n            value={this.state.formFields.username}\r\n        >\r\n        </TextInput>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK;AACjB,SAASC,WAAW,EAChBC,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,SAAS,EACTC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,iBAAiB,EACjBC,gBAAgB,EAChBC,WAAW,EACXC,mBAAmB,EACnBC,IAAI,EACJC,YAAY,EACZC,WAAW;AAIf,SAASC,qBAAqB;AAE9B,SAASC,GAAG;AACZ,SAASC,WAAW;AACpB,SAASC,YAAY;AACrB,SAASC,cAAc;AACvB,SAASC,eAAe;AAExB,SAASC,UAAU;AACnB,SAAQC,yBAAyB;AAqBjC;AACA;AACA;AACA,OAAO,MAAMC,WAAW,SAASxB,KAAK,CAACyB,SAAS,CAAqC;EA0B1EC,WAAWA,CAACC,KAAuB,EAAEC,OAAwD,EAAE;IAClG,KAAK,CAACD,KAAK,CAAC;IAACE,eAAA;IAAAA,eAAA,wCAxBgCC,QAAQ,CAACC,6BAA6B;IAAAF,eAAA,gCAC9CC,QAAQ,CAACE,qBAAqB;IAAAH,eAAA,iCAC7BC,QAAQ,CAACG,oBAAoB;IAAAJ,eAAA,sCACxBC,QAAQ,CAACI,yBAAyB;IAAAL,eAAA,qCACnCC,QAAQ,CAACK,wBAAwB;IAAAN,eAAA,wBAC5B;MAC/CO,MAAM,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACX,CAAC;MACDC,UAAU,EAAE;QACRJ,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTE,UAAU,EAAE,CAAC;MACjB;IACJ,CAAC;IAAAb,eAAA,gBAEgC,IAAI,CAACc,aAAa;IAAAd,eAAA,uBAyB5B,MAAY;MAC/B,IAAI,CAACe,iBAAiB,CAAC,CAAC;IAC5B,CAAC;IAAAf,eAAA,uBAEsB,CAACgB,KAAa,EAAEC,KAAwC,KAAK;MAChF,MAAMC,MAAM,GAAGD,KAAK,CAACE,aAAa;MAClC,MAAMC,IAAI,GAAGF,MAAM,CAACE,IAAI;MAExB,IAAI,CAACC,QAAQ,CAAC;QACVd,MAAM,EAAE;UAAE,GAAG,IAAI,CAACe,KAAK,CAACf,MAAM;UAAE,CAACa,IAAI,GAAGF,MAAM,CAACK;QAAkB,CAAC;QAClEX,UAAU,EAAE;UAAE,GAAG,IAAI,CAACU,KAAK,CAACV,UAAU;UAAE,CAACQ,IAAI,GAAGJ;QAAM;MAC1D,CAAC,CAAC;IACN,CAAC;IAAAhB,eAAA,uBAEuBiB,KAAuC,IAAW;MACtEA,KAAK,CAACO,cAAc,CAAC,CAAC;MACtB,MAAMC,IAAI,GAAGR,KAAK,CAACC,MAAyB;MAC5C,MAAMQ,OAAO,GAAGD,IAAI,CAACE,aAAa,CAAC,CAAC;MACpC,IAAID,OAAO,EAAE;QACT,MAAME,OAAmB,GAAG;UAAE,GAAG,IAAI,CAACN,KAAK,CAACV;QAAW,CAAC;QACxD,IAAI,CAACb,OAAO,CAAE8B,MAAM,CAAO,GAAG,EAAED,OAAO,CAAC,CACnCE,IAAI,CAAC,MAAM;UACRxC,YAAY,CAACyC,OAAO,CAAC,uBAAuB,CAAC;UAC7C,IAAIC,MAAM,KAAK,IAAI,CAACV,KAAK,CAACV,UAAU,CAACC,UAAU,CAAEmB,MAAM,CAAE,CAAC,CAAC,EAAE;YACzDC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;UAC5B;QACJ,CAAC,CAAC;MACV,CAAC,MAAM;QACH,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACZ,IAAI,CAAC;QACnC,MAAMa,kBAAkB,GAAGC,KAAK,CAACC,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;UACxED,GAAG,CAACC,GAAG,CAAC,GAAGnB,IAAI,CAACoB,QAAQ,CAACD,GAAG,CAAC,CAACrB,iBAAiB;UAC/C,OAAOoB,GAAG;QACd,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,IAAI,CAACtB,QAAQ,CAAC;UACVd,MAAM,EAAE;YAAE,GAAG+B;UAAmB,CAAC;UACjC1B,UAAU,EAAE,IAAI,CAACU,KAAK,CAACV;QAC3B,CAAC,CAAC;MACN;IAEJ,CAAC;IAAAZ,eAAA,uBAEuB8C,QAAyB,IAAW;MACxD,IAAIrD,UAAU,CAACqD,QAAQ,EAAE,gBAAgB,CAAC,CAACC,OAAO,CAAC,CAAC;IACxD,CAAC;IAAA/C,eAAA,4BAE4B8C,QAAyB,IAAW;MAC7D,IAAIrD,UAAU,CAACqD,QAAQ,EAAE,cAAc,CAAC,CAACC,OAAO,CAAC,CAAC;IACtD,CAAC;IAAA/C,eAAA,wBA0NuB,mBACpB7B,KAAA,CAAA6E,aAAA,CAACxE,SAAS;MACNyE,UAAU;MACVC,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACd/B,IAAI,EAAC,UAAU;MACfgC,SAAS,EAAE,GAAI;MACfpC,KAAK,EAAE,IAAI,CAACM,KAAK,CAACV,UAAU,CAACJ,QAAS;MACtC6C,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,SAAS,EAAE,IAAI,CAACjC,KAAK,CAACf,MAAM,CAACC,QAAQ,KAAK,EAAE,GAAG3B,gBAAgB,CAAC2E,KAAK,GAAG3E,gBAAgB,CAAC4E;IAAQ,CAE1F,CACd;IAAAzD,eAAA,kCAEiC,mBAC9B7B,KAAA,CAAA6E,aAAA,CAACxE,SAAS;MACNkF,UAAU;MACVR,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACd/B,IAAI,EAAC,UAAU;MACfJ,KAAK,EAAE,IAAI,CAACM,KAAK,CAACV,UAAU,CAACJ;IAAS,CAE/B,CACd;IArTG,IAAI,CAACT,OAAO,GAAGA,OAAO;IAEtB,IAAI,CAACgB,iBAAiB,CAAC,CAAC;EAC5B;EAEQA,iBAAiBA,CAAA,EAAS;IAC9B,IAAI,CAAChB,OAAO,CAAE4D,KAAK,CAAa,GAAG,CAAC,CAC/B7B,IAAI,CAAE8B,QAAkC,IAAK;MAC1C,IAAI,CAACvC,QAAQ,CAAC,IAAI,CAACP,aAAa,CAAC;MACjC,MAAMF,UAAU,GAAGgD,QAAQ,CAACC,IAAI;MAChC,IAAI,CAACjD,UAAU,CAAEC,UAAU,EAAE;QACzBD,UAAU,CAAEC,UAAU,GAAG;UAAEmB,MAAM,EAAE,CAACA,MAAM;QAAE,CAAC;MACjD,CAAC,MACI,IAAI,CAACpB,UAAU,CAAEC,UAAU,CAACmB,MAAM,EAAE;QACrCpB,UAAU,CAAEC,UAAU,CAACmB,MAAM,GAAG,CAACA,MAAM,CAAC;MAC5C;MAEA,IAAI,CAACX,QAAQ,CAAC;QAAC,GAAG;UAAET,UAAU,EAAEA;QAAyB;MAAC,CAAC,CAAC;IAChE,CAAC,CAAC;EACV;EAmDOkD,MAAMA,CAAA,EAAoB;IAC7B,MAAMC,MAAkB,GAAG,IAAI,CAACzC,KAAK,CAACV,UAAU;IAChD,oBACIzC,KAAA,CAAA6E,aAAA,CAAC3D,WAAW;MACR2E,KAAK,EAAC,uBAAuB;MAC7BC,YAAY,EAAC;IAAoB,gBAEjC9F,KAAA,CAAA6E,aAAA,CAAClE,WAAW;MAACoF,QAAQ;MAACC,OAAO,EAAEpF,mBAAmB,CAACqF;IAAM,gBACrDjG,KAAA,CAAA6E,aAAA,CAAC9D,WAAW;MAACmF,SAAS,EAAC;IAAY,gBAC/BlG,KAAA,CAAA6E,aAAA,CAAChE,IAAI;MAACsF,SAAS,EAAErF,YAAY,CAACsF;IAAM,GACjCnF,GAAG,CAACoF,QAAQ,CAAC,mBAAmB,CAC7B,CACG,CAAC,eACdrG,KAAA,CAAA6E,aAAA,CAAC1E,IAAI;MACDmG,QAAQ,EAAGxD,KAAK,IAAK,IAAI,CAACyD,YAAY,CAACzD,KAAK,CAAE;MAC9CoD,SAAS,EAAC;IAAoB,GAE7B,CAAC,IAAI,CAACnE,6BAA6B,IAAI6D,MAAM,CAACvD,QAAQ,IAAImE,SAAS,iBAChExG,KAAA,CAAA6E,aAAA,CAACzE,SAAS;MACNqG,KAAK,EAAExF,GAAG,CAACoF,QAAQ,CAAC,UAAU,CAAE;MAChCK,OAAO,EAAC,WAAW;MACnBC,iBAAiB,EAAE,IAAI,CAACxD,KAAK,CAACf,MAAM,CAACC,QAAS;MAC9C+C,SAAS,EACL,IAAI,CAACjC,KAAK,CAACf,MAAM,CAACC,QAAQ,KAAK,EAAE,GAC3B3B,gBAAgB,CAAC2E,KAAK,GACtB3E,gBAAgB,CAAC4E;IAC1B,GAEA,IAAI,CAACtD,qBAAqB,iBAAIhC,KAAA,CAAA6E,aAAA,MAAM+B,aAAa,MAAE,CAAC,EACpD,CAAC,IAAI,CAAC5E,qBAAqB,iBACxBhC,KAAA,CAAA6E,aAAA,MAAMgC,uBAAuB,MAAE,CAE5B,CACd,EACA,CAAC,IAAI,CAACC,2BAA2B,iBAAI9G,KAAA,CAAA6E,aAAA,CAACzE,SAAS;MAC5CqG,KAAK,EAAExF,GAAG,CAACoF,QAAQ,CAAC,OAAO,CAAE;MAC7BK,OAAO,EAAC,eAAe;MACvBC,iBAAiB,EAAE,IAAI,CAACxD,KAAK,CAACf,MAAM,CAACI,KAAM;MAC3C4C,SAAS,EACL,IAAI,CAACjC,KAAK,CAACf,MAAM,CAACI,KAAK,KAAK,EAAE,GACxB9B,gBAAgB,CAAC2E,KAAK,GACtB3E,gBAAgB,CAAC4E;IAC1B,gBAEDtF,KAAA,CAAA6E,aAAA,CAACxE,SAAS;MACNyE,UAAU;MACVC,IAAI,EAAC,OAAO;MACZC,EAAE,EAAC,eAAe;MAClB/B,IAAI,EAAC,OAAO;MACZgC,SAAS,EAAE,GAAI;MACfpC,KAAK,EAAE+C,MAAM,CAACpD,KAAM;MACpB0C,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,SAAS,EACL,IAAI,CAACjC,KAAK,CAACf,MAAM,CAACI,KAAK,KAAK,EAAE,GACxB9B,gBAAgB,CAAC2E,KAAK,GACtB3E,gBAAgB,CAAC4E;IAC1B,CACO,CACL,CAAC,EACX,IAAI,CAACwB,2BAA2B,iBAAI9G,KAAA,CAAA6E,aAAA,CAACzE,SAAS;MAC3CqG,KAAK,EAAExF,GAAG,CAACoF,QAAQ,CAAC,OAAO,CAAE;MAC7BK,OAAO,EAAC;IAAe,gBAEvB1G,KAAA,CAAA6E,aAAA,CAACvE,UAAU,qBACPN,KAAA,CAAA6E,aAAA,CAACxE,SAAS;MACN0G,UAAU;MACVhC,IAAI,EAAC,OAAO;MACZC,EAAE,EAAC,eAAe;MAClB/B,IAAI,EAAC,OAAO;MACZJ,KAAK,EAAE+C,MAAM,CAACpD;IAAM,CAEb,CAAC,EACX,IAAI,CAACwE,0BAA0B,KAAK,CAAC,IAAI,CAACjF,6BAA6B,IAAI,IAAI,CAACC,qBAAqB,CAAC,iBACnGhC,KAAA,CAAA6E,aAAA,CAACxD,eAAe,CAAC4F,QAAQ,QAClBtC,QAAQ,iBACP3E,KAAA,CAAA6E,aAAA,CAAC3E,MAAM;MAAC8E,EAAE,EAAC,kBAAkB;MACrBgB,OAAO,EAAC,MAAM;MACdkB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACC,iBAAiB,CAACxC,QAAS,CAAE;MACjDyC,IAAI,eAAEpH,KAAA,CAAA6E,aAAA,CAACtD,yBAAyB,MAAC,CAAE;MACnC8F,YAAY,EAAC;IAAO,gBACxBrH,KAAA,CAAA6E,aAAA,CAAC5D,GAAG;MAACqG,MAAM,EAAC;IAAa,CAAE,CACvB,CAEU,CAEtB,CACL,CAAC,eACZtH,KAAA,CAAA6E,aAAA,CAACzE,SAAS;MACNqG,KAAK,EAAExF,GAAG,CAACoF,QAAQ,CAAC,WAAW,CAAE;MACjCK,OAAO,EAAC,YAAY;MACpBC,iBAAiB,EAAE,IAAI,CAACxD,KAAK,CAACf,MAAM,CAACE,SAAU;MAC/C8C,SAAS,EACL,IAAI,CAACjC,KAAK,CAACf,MAAM,CAACE,SAAS,KAAK,EAAE,GAC5B5B,gBAAgB,CAAC2E,KAAK,GACtB3E,gBAAgB,CAAC4E;IAC1B,gBAEDtF,KAAA,CAAA6E,aAAA,CAACxE,SAAS;MACNyE,UAAU;MACVC,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,YAAY;MACf/B,IAAI,EAAC,WAAW;MAChBgC,SAAS,EAAE,GAAI;MACfpC,KAAK,EAAE+C,MAAM,CAACtD,SAAU;MACxB4C,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,SAAS,EACL,IAAI,CAACjC,KAAK,CAACf,MAAM,CAACE,SAAS,KAAK,EAAE,GAC5B5B,gBAAgB,CAAC2E,KAAK,GACtB3E,gBAAgB,CAAC4E;IAC1B,CACO,CACL,CAAC,eACZtF,KAAA,CAAA6E,aAAA,CAACzE,SAAS;MACNqG,KAAK,EAAExF,GAAG,CAACoF,QAAQ,CAAC,UAAU,CAAE;MAChCK,OAAO,EAAC,WAAW;MACnBC,iBAAiB,EAAE,IAAI,CAACxD,KAAK,CAACf,MAAM,CAACG,QAAS;MAC9C6C,SAAS,EACL,IAAI,CAACjC,KAAK,CAACf,MAAM,CAACG,QAAQ,KAAK,EAAE,GAC3B7B,gBAAgB,CAAC2E,KAAK,GACtB3E,gBAAgB,CAAC4E;IAC1B,gBAEDtF,KAAA,CAAA6E,aAAA,CAACxE,SAAS;MACNyE,UAAU;MACVC,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACd/B,IAAI,EAAC,UAAU;MACfgC,SAAS,EAAE,GAAI;MACfpC,KAAK,EAAE+C,MAAM,CAACrD,QAAS;MACvB2C,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,SAAS,EACL,IAAI,CAACjC,KAAK,CAACf,MAAM,CAACG,QAAQ,KAAK,EAAE,GAC3B7B,gBAAgB,CAAC2E,KAAK,GACtB3E,gBAAgB,CAAC4E;IAC1B,CACO,CACL,CAAC,EACXxD,QAAQ,CAACyF,6BAA6B,iBACnCvH,KAAA,CAAA6E,aAAA,CAACzE,SAAS;MACNqG,KAAK,EAAExF,GAAG,CAACoF,QAAQ,CAAC,cAAc,CAAE;MACpCvB,UAAU;MACV4B,OAAO,EAAC;IAAQ,gBAEhB1G,KAAA,CAAA6E,aAAA,CAACzD,cAAc;MACX4D,EAAE,EAAC,iBAAiB;MACpBnC,KAAK,EAAE+C,MAAM,CAAClD,UAAU,CAAEmB,MAAM,IAAI,EAAG;MACvCqB,QAAQ,EAAGrC,KAAK,IACZ,IAAI,CAACK,QAAQ,CAAC;QACVd,MAAM,EAAE,IAAI,CAACe,KAAK,CAACf,MAAM;QACzBK,UAAU,EAAE;UACR,GAAG,IAAI,CAACU,KAAK,CAACV,UAAU;UACxBC,UAAU,EAAE;YACR,GAAG,IAAI,CAACS,KAAK,CAACV,UAAU,CAACC,UAAU;YACnCmB,MAAM,EAAE,CAAChB,KAAK;UAC9B;QACA;MACA,CAAC;IACA,CACJ,CACM,CACd,eACD7C,KAAA,CAAA6E,aAAA,CAAC5E,WAAW,qBACRD,KAAA,CAAA6E,aAAA,CAAC3E,MAAM;MACH6E,IAAI,EAAC,QAAQ;MACbC,EAAE,EAAC,UAAU;MACbgB,OAAO,EAAC,SAAS;MACjBe,UAAU,EACNS,MAAM,CAACC,MAAM,CAAC,IAAI,CAACtE,KAAK,CAACf,MAAM,CAAC,CAACsF,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAK,EAAE,CAAC,CACvDC,MAAM,KAAK;IACf,gBAED5H,KAAA,CAAA6E,aAAA,CAAC5D,GAAG;MAACqG,MAAM,EAAC;IAAQ,CAAE,CAClB,CAAC,eACTtH,KAAA,CAAA6E,aAAA,CAAC3E,MAAM;MACH8E,EAAE,EAAC,YAAY;MACfgB,OAAO,EAAC,MAAM;MACdkB,OAAO,EAAE,IAAI,CAACW;IAAa,gBAE3B7H,KAAA,CAAA6E,aAAA,CAAC5D,GAAG;MAACqG,MAAM,EAAC;IAAU,CAAE,CACpB,CACC,CACX,CAAC,EAEd,IAAI,CAACQ,sBAAsB,iBACxB9H,KAAA,CAAA6E,aAAA;MAAKG,EAAE,EAAC,gBAAgB;MAAC+C,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO;IAAE,gBAClDhI,KAAA,CAAA6E,aAAA,CAACpE,iBAAiB;MAACwH,UAAU,EAAEhH,GAAG,CAACoF,QAAQ,CAAC,eAAe;IAAE,gBACzDrG,KAAA,CAAA6E,aAAA,CAACtE,IAAI;MAAC2H,SAAS;IAAA,gBACXlI,KAAA,CAAA6E,aAAA,CAACrE,QAAQ;MAAC2H,IAAI,EAAE;IAAE,gBACdnI,KAAA,CAAA6E,aAAA,yBACI7E,KAAA,CAAA6E,aAAA,CAAC5D,GAAG;MAACqG,MAAM,EAAC;IAAsB,CAAE,CACrC,CACG,CAAC,eACXtH,KAAA,CAAA6E,aAAA,CAACrE,QAAQ;MAAC2H,IAAI,EAAE;IAAE,gBACdnI,KAAA,CAAA6E,aAAA,CAACxD,eAAe,CAAC4F,QAAQ,QACnBtC,QAAQ,iBACN3E,KAAA,CAAA6E,aAAA,CAAC3E,MAAM;MACH8E,EAAE,EAAC,oBAAoB;MACvBgB,OAAO,EAAC,QAAQ;MAChBkB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACkB,YAAY,CAACzD,QAAS,CAAE;MAC5CuB,SAAS,EAAC;IAAe,gBAEzBlG,KAAA,CAAA6E,aAAA,CAAC5D,GAAG;MAACqG,MAAM,EAAC;IAAU,CAAE,CACpB,CAEU,CACpB,CAAC,eACXtH,KAAA,CAAA6E,aAAA,CAACrE,QAAQ;MAAC2H,IAAI,EAAE;IAAE,CAAW,CAC3B,CACS,CAClB,CAEI,CACJ,CAAC;EAElB;AA0BJ;AAACtG,eAAA,CAlVYL,WAAW,iBACCR,qBAAqB;AAiV7C"}