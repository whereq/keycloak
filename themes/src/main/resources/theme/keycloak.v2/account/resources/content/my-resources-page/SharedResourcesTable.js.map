{"version":3,"file":"SharedResourcesTable.js","names":["React","DataList","DataListItem","DataListItemRow","DataListCell","DataListItemCells","ChipGroup","Chip","RepositoryIcon","Msg","AbstractResourcesTable","EmptyMessageState","SharedResourcesTable","constructor","props","state","permissions","Map","render","resources","data","length","createElement","icon","messageKey","localize","id","key","dataListCells","width","msgKey","map","resource","row","name","href","client","baseUrl","getClientName","scopes","categoryName","scope","isReadOnly","displayName","shareRequests"],"sources":["../../../src/app/content/my-resources-page/SharedResourcesTable.tsx"],"sourcesContent":["/*\r\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nimport {\r\n    DataList,\r\n    DataListItem,\r\n    DataListItemRow,\r\n    DataListCell,\r\n    DataListItemCells,\r\n    ChipGroup,\r\n    Chip\r\n  } from '@patternfly/react-core';\r\nimport { RepositoryIcon } from '@patternfly/react-icons';\r\n\r\n\r\nimport { PaginatedResources, Resource, Scope } from \"./resource-model\";\r\nimport { Msg } from '../../widgets/Msg';\r\nimport { AbstractResourcesTable, ResourcesTableState } from './AbstractResourceTable';\r\nimport EmptyMessageState from '../../widgets/EmptyMessageState';\r\n\r\nexport interface ResourcesTableProps {\r\n    resources: PaginatedResources;\r\n    noResourcesMessage: string;\r\n}\r\n\r\nexport class SharedResourcesTable extends AbstractResourcesTable<ResourcesTableState> {\r\n\r\n    public constructor(props: ResourcesTableProps) {\r\n        super(props);\r\n        this.state = {\r\n            permissions: new Map()\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        if (this.props.resources.data.length === 0) {\r\n            return (\r\n                <EmptyMessageState icon={RepositoryIcon} messageKey=\"noResourcesSharedWithYou\"/>\r\n            );\r\n        }\r\n        return (\r\n            <DataList aria-label={Msg.localize('resources')} id=\"sharedResourcesList\">\r\n                <DataListItem key='resource-header' aria-labelledby='resource-header'>\r\n                    <DataListItemRow>\r\n                        <DataListItemCells\r\n                            dataListCells={[\r\n                                <DataListCell key='resource-name-header' width={2}>\r\n                                    <strong><Msg msgKey='resourceName'/></strong>\r\n                                </DataListCell>,\r\n                                <DataListCell key='application-name-header' width={2}>\r\n                                    <strong><Msg msgKey='application'/></strong>\r\n                                </DataListCell>,\r\n                                <DataListCell key='permission-header' width={2}/>,\r\n                                <DataListCell key='requests-header' width={2}/>,\r\n                            ]}\r\n                        />\r\n                    </DataListItemRow>\r\n                </DataListItem>\r\n                {this.props.resources.data.map((resource: Resource, row: number) => (\r\n                    <DataListItem key={'resource-' + row} aria-labelledby={resource.name}>\r\n                        <DataListItemRow>\r\n                            <DataListItemCells\r\n                                dataListCells={[\r\n                                    <DataListCell key={'resourceName-' + row} width={2}>\r\n                                        <Msg msgKey={resource.name}/>\r\n                                    </DataListCell>,\r\n                                    <DataListCell key={'resourceClient-' + row} width={2}>\r\n                                        <a href={resource.client.baseUrl}>{this.getClientName(resource.client)}</a>\r\n                                    </DataListCell>,\r\n                                    <DataListCell key={'permissions-' + row} width={2}>\r\n                                        { resource.scopes.length > 0 &&\r\n                                        <ChipGroup categoryName={Msg.localize('permissions')}>\r\n                                            {\r\n                                                resource.scopes.map(scope => (\r\n                                                    <Chip key={scope.name} isReadOnly>\r\n                                                        {scope.displayName || scope.name}\r\n                                                    </Chip>\r\n                                                ))\r\n                                            }\r\n                                        </ChipGroup>}\r\n                                    </DataListCell>,\r\n                                    <DataListCell key={'pending-' + row} width={2}>\r\n                                        {resource.shareRequests.length > 0 &&\r\n                                        <ChipGroup categoryName={Msg.localize('pending')}>\r\n                                            {\r\n                                                (resource.shareRequests[0].scopes as Scope[]).map(scope => (\r\n                                                    <Chip key={scope.name} isReadOnly>\r\n                                                        {scope.displayName || scope.name}\r\n                                                    </Chip>\r\n                                                ))\r\n                                            }\r\n                                        </ChipGroup>\r\n                                        }\r\n                                    </DataListCell>\r\n                                ]}\r\n                            />\r\n                        </DataListItemRow>\r\n                    </DataListItem>\r\n                ))}\r\n            </DataList>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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"}