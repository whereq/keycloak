{"version":3,"file":"GroupsPage.js","names":["React","Checkbox","DataList","DataListItem","DataListItemRow","DataListCell","DataListItemCells","ContentPage","AccountServiceContext","Msg","GroupsPage","Component","constructor","props","context","_defineProperty","checked","event","setState","isDirectMembership","state","groups","directGroups","fetchGroups","doGet","then","response","data","groupsPaths","map","s","path","forEach","el","getParents","parentPath","slice","lastIndexOf","indexOf","name","push","emptyGroup","createElement","key","dataListCells","msgKey","renderGroupList","group","appIndex","id","width","isChecked","isDisabled","render","title","localize","isCompact","label","onChange","changeDirectMembership","length"],"sources":["../../../src/app/content/group-page/GroupsPage.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport {\r\n  Checkbox,\r\n  DataList,\r\n  DataListItem,\r\n  DataListItemRow,\r\n  DataListCell,\r\n  DataListItemCells,\r\n} from '@patternfly/react-core';\r\n\r\nimport { ContentPage } from '../ContentPage';\r\nimport { HttpResponse } from '../../account-service/account.service';\r\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\r\nimport { Msg } from '../../widgets/Msg';\r\n\r\nexport interface GroupsPageProps {\r\n}\r\n\r\nexport interface GroupsPageState {\r\n  groups: Group[];\r\n  directGroups: Group[];\r\n  isDirectMembership: boolean;\r\n}\r\n\r\ninterface Group {\r\n  id?: string;\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\nexport class GroupsPage extends React.Component<GroupsPageProps, GroupsPageState> {\r\n  static contextType = AccountServiceContext;\r\n  context: React.ContextType<typeof AccountServiceContext>;\r\n\r\n  public constructor(props: GroupsPageProps, context: React.ContextType<typeof AccountServiceContext>) {\r\n    super(props);\r\n    this.context = context;\r\n    this.state = {\r\n      groups: [],\r\n      directGroups: [],\r\n      isDirectMembership: false\r\n    };\r\n\r\n    this.fetchGroups();\r\n  }\r\n\r\n  private fetchGroups(): void {\r\n    this.context!.doGet<Group[]>(\"/groups\")\r\n      .then((response: HttpResponse<Group[]>) => {\r\n        const directGroups = response.data || [];\r\n        const groups = [...directGroups];\r\n        const groupsPaths = directGroups.map(s => s.path);\r\n        directGroups.forEach((el) => this.getParents(el, groups, groupsPaths))\r\n        this.setState({\r\n          groups: groups,\r\n          directGroups: directGroups\r\n        });\r\n      });\r\n  }\r\n\r\n  private getParents(el: Group, groups: Group[], groupsPaths: string[]): void {\r\n    const parentPath = el.path.slice(0, el.path.lastIndexOf('/'));\r\n    if (parentPath && (groupsPaths.indexOf(parentPath) === -1)) {\r\n\r\n      el = {\r\n        name: parentPath.slice(parentPath.lastIndexOf('/')+1),\r\n        path: parentPath\r\n      };\r\n      groups.push(el);\r\n      groupsPaths.push(parentPath);\r\n\r\n      this.getParents(el, groups, groupsPaths);\r\n    }\r\n  }\r\n\r\n  private changeDirectMembership = (checked: boolean,event: React.FormEvent<HTMLInputElement> )=> {\r\n    this.setState({\r\n      isDirectMembership: checked\r\n    });\r\n  }\r\n\r\n  private emptyGroup(): React.ReactNode {\r\n\r\n    return (\r\n      <DataListItem key='emptyItem' aria-labelledby=\"empty-item\">\r\n        <DataListItemRow key='emptyRow'>\r\n          <DataListItemCells dataListCells={[\r\n            <DataListCell key='empty'><strong><Msg msgKey='noGroupsText' /></strong></DataListCell>\r\n          ]} />\r\n        </DataListItemRow>\r\n      </DataListItem>\r\n    )\r\n  }\r\n\r\n  private renderGroupList(group: Group, appIndex: number): React.ReactNode {\r\n\r\n    return (\r\n      <DataListItem id={`${appIndex}-group`} key={'group-' + appIndex} aria-labelledby=\"groups-list\" >\r\n        <DataListItemRow>\r\n          <DataListItemCells\r\n            dataListCells={[\r\n              <DataListCell id={`${appIndex}-group-name`} width={2} key={'name-' + appIndex}>\r\n                {group.name}\r\n              </DataListCell>,\r\n              <DataListCell id={`${appIndex}-group-path`} width={2} key={'path-' + appIndex}>\r\n                {group.path}\r\n              </DataListCell>,\r\n              <DataListCell id={`${appIndex}-group-directMembership`} width={2} key={'directMembership-' + appIndex}>\r\n                <Checkbox id={`${appIndex}-checkbox-directMembership`} isChecked={group.id != null} isDisabled={true} />\r\n              </DataListCell>\r\n            ]}\r\n          />\r\n        </DataListItemRow>\r\n\r\n      </DataListItem>\r\n    )\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <ContentPage title={Msg.localize('groupLabel')}>\r\n        <DataList id=\"groups-list\" aria-label={Msg.localize('groupLabel')} isCompact>\r\n          <DataListItem id=\"groups-list-header\" aria-labelledby=\"Columns names\">\r\n            <DataListItemRow >\r\n              <DataListItemCells\r\n                dataListCells={[\r\n                  <DataListCell key='directMembership-header' >\r\n                    <Checkbox\r\n                      label={Msg.localize('directMembership')}\r\n                      id=\"directMembership-checkbox\"\r\n                      isChecked={this.state.isDirectMembership}\r\n                      onChange={this.changeDirectMembership}\r\n                    />\r\n\r\n                  </DataListCell>\r\n                ]}\r\n              />\r\n            </DataListItemRow>\r\n          </DataListItem>\r\n          <DataListItem id=\"groups-list-header\" aria-labelledby=\"Columns names\">\r\n            <DataListItemRow >\r\n              <DataListItemCells\r\n                dataListCells={[\r\n                  <DataListCell key='group-name-header' width={2}>\r\n                    <strong><Msg msgKey='Name' /></strong>\r\n                  </DataListCell>,\r\n                  <DataListCell key='group-path-header' width={2}>\r\n                    <strong><Msg msgKey='path' /></strong>\r\n                  </DataListCell>,\r\n                  <DataListCell key='group-direct-membership-header' width={2}>\r\n                    <strong><Msg msgKey='directMembership' /></strong>\r\n                  </DataListCell>,\r\n                ]}\r\n              />\r\n            </DataListItemRow>\r\n          </DataListItem>\r\n          {this.state.groups.length === 0\r\n            ? this.emptyGroup()\r\n            : (this.state.isDirectMembership ? this.state.directGroups.map((group: Group, appIndex: number) =>\r\n              this.renderGroupList(group, appIndex)\r\n            ) : this.state.groups.map((group: Group, appIndex: number) =>\r\n              this.renderGroupList(group, appIndex)))}\r\n        </DataList>\r\n      </ContentPage>\r\n    );\r\n  }\r\n};\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK;AAEjB,SACEC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,eAAe,EACfC,YAAY,EACZC,iBAAiB;AAGnB,SAASC,WAAW;AAEpB,SAASC,qBAAqB;AAC9B,SAASC,GAAG;AAiBZ,OAAO,MAAMC,UAAU,SAASV,KAAK,CAACW,SAAS,CAAmC;EAIzEC,WAAWA,CAACC,KAAsB,EAAEC,OAAwD,EAAE;IACnG,KAAK,CAACD,KAAK,CAAC;IAACE,eAAA;IAAAA,eAAA,iCAwCkB,CAACC,OAAgB,EAACC,KAAwC,KAAK;MAC9F,IAAI,CAACC,QAAQ,CAAC;QACZC,kBAAkB,EAAEH;MACtB,CAAC,CAAC;IACJ,CAAC;IA3CC,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACM,KAAK,GAAG;MACXC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE,EAAE;MAChBH,kBAAkB,EAAE;IACtB,CAAC;IAED,IAAI,CAACI,WAAW,CAAC,CAAC;EACpB;EAEQA,WAAWA,CAAA,EAAS;IAC1B,IAAI,CAACT,OAAO,CAAEU,KAAK,CAAU,SAAS,CAAC,CACpCC,IAAI,CAAEC,QAA+B,IAAK;MACzC,MAAMJ,YAAY,GAAGI,QAAQ,CAACC,IAAI,IAAI,EAAE;MACxC,MAAMN,MAAM,GAAG,CAAC,GAAGC,YAAY,CAAC;MAChC,MAAMM,WAAW,GAAGN,YAAY,CAACO,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;MACjDT,YAAY,CAACU,OAAO,CAAEC,EAAE,IAAK,IAAI,CAACC,UAAU,CAACD,EAAE,EAAEZ,MAAM,EAAEO,WAAW,CAAC,CAAC;MACtE,IAAI,CAACV,QAAQ,CAAC;QACZG,MAAM,EAAEA,MAAM;QACdC,YAAY,EAAEA;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEQY,UAAUA,CAACD,EAAS,EAAEZ,MAAe,EAAEO,WAAqB,EAAQ;IAC1E,MAAMO,UAAU,GAAGF,EAAE,CAACF,IAAI,CAACK,KAAK,CAAC,CAAC,EAAEH,EAAE,CAACF,IAAI,CAACM,WAAW,CAAC,GAAG,CAAC,CAAC;IAC7D,IAAIF,UAAU,IAAKP,WAAW,CAACU,OAAO,CAACH,UAAU,CAAC,KAAK,CAAC,CAAE,EAAE;MAE1DF,EAAE,GAAG;QACHM,IAAI,EAAEJ,UAAU,CAACC,KAAK,CAACD,UAAU,CAACE,WAAW,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;QACrDN,IAAI,EAAEI;MACR,CAAC;MACDd,MAAM,CAACmB,IAAI,CAACP,EAAE,CAAC;MACfL,WAAW,CAACY,IAAI,CAACL,UAAU,CAAC;MAE5B,IAAI,CAACD,UAAU,CAACD,EAAE,EAAEZ,MAAM,EAAEO,WAAW,CAAC;IAC1C;EACF;EAQQa,UAAUA,CAAA,EAAoB;IAEpC,oBACEzC,KAAA,CAAA0C,aAAA,CAACvC,YAAY;MAACwC,GAAG,EAAC,WAAW;MAAC,mBAAgB;IAAY,gBACxD3C,KAAA,CAAA0C,aAAA,CAACtC,eAAe;MAACuC,GAAG,EAAC;IAAU,gBAC7B3C,KAAA,CAAA0C,aAAA,CAACpC,iBAAiB;MAACsC,aAAa,EAAE,cAChC5C,KAAA,CAAA0C,aAAA,CAACrC,YAAY;QAACsC,GAAG,EAAC;MAAO,gBAAC3C,KAAA,CAAA0C,aAAA,8BAAQ1C,KAAA,CAAA0C,aAAA,CAACjC,GAAG;QAACoC,MAAM,EAAC;MAAc,CAAE,CAAS,CAAe,CAAC;IACvF,CAAE,CACW,CACL,CAAC;EAEnB;EAEQC,eAAeA,CAACC,KAAY,EAAEC,QAAgB,EAAmB;IAEvE,oBACEhD,KAAA,CAAA0C,aAAA,CAACvC,YAAY;MAAC8C,EAAE,EAAG,GAAED,QAAS,QAAQ;MAACL,GAAG,EAAE,QAAQ,GAAGK,QAAS;MAAC,mBAAgB;IAAa,gBAC5FhD,KAAA,CAAA0C,aAAA,CAACtC,eAAe,qBACdJ,KAAA,CAAA0C,aAAA,CAACpC,iBAAiB;MAChBsC,aAAa,EAAE,cACb5C,KAAA,CAAA0C,aAAA,CAACrC,YAAY;QAAC4C,EAAE,EAAG,GAAED,QAAS,aAAa;QAACE,KAAK,EAAE,CAAE;QAACP,GAAG,EAAE,OAAO,GAAGK;MAAS,GAC3ED,KAAK,CAACR,IACK,CAAC,eACfvC,KAAA,CAAA0C,aAAA,CAACrC,YAAY;QAAC4C,EAAE,EAAG,GAAED,QAAS,aAAa;QAACE,KAAK,EAAE,CAAE;QAACP,GAAG,EAAE,OAAO,GAAGK;MAAS,GAC3ED,KAAK,CAAChB,IACK,CAAC,eACf/B,KAAA,CAAA0C,aAAA,CAACrC,YAAY;QAAC4C,EAAE,EAAG,GAAED,QAAS,yBAAyB;QAACE,KAAK,EAAE,CAAE;QAACP,GAAG,EAAE,mBAAmB,GAAGK;MAAS,gBACpGhD,KAAA,CAAA0C,aAAA,CAACzC,QAAQ;QAACgD,EAAE,EAAG,GAAED,QAAS,4BAA4B;QAACG,SAAS,EAAEJ,KAAK,CAACE,EAAE,IAAI,IAAK;QAACG,UAAU,EAAE;MAAK,CAAE,CAC3F,CAAC;IACf,CACH,CACc,CAEL,CAAC;EAEnB;EAEOC,MAAMA,CAAA,EAAoB;IAC/B,oBACErD,KAAA,CAAA0C,aAAA,CAACnC,WAAW;MAAC+C,KAAK,EAAE7C,GAAG,CAAC8C,QAAQ,CAAC,YAAY;IAAE,gBAC7CvD,KAAA,CAAA0C,aAAA,CAACxC,QAAQ;MAAC+C,EAAE,EAAC,aAAa;MAAC,cAAYxC,GAAG,CAAC8C,QAAQ,CAAC,YAAY,CAAE;MAACC,SAAS;IAAA,gBAC1ExD,KAAA,CAAA0C,aAAA,CAACvC,YAAY;MAAC8C,EAAE,EAAC,oBAAoB;MAAC,mBAAgB;IAAe,gBACnEjD,KAAA,CAAA0C,aAAA,CAACtC,eAAe,qBACdJ,KAAA,CAAA0C,aAAA,CAACpC,iBAAiB;MAChBsC,aAAa,EAAE,cACb5C,KAAA,CAAA0C,aAAA,CAACrC,YAAY;QAACsC,GAAG,EAAC;MAAyB,gBACzC3C,KAAA,CAAA0C,aAAA,CAACzC,QAAQ;QACPwD,KAAK,EAAEhD,GAAG,CAAC8C,QAAQ,CAAC,kBAAkB,CAAE;QACxCN,EAAE,EAAC,2BAA2B;QAC9BE,SAAS,EAAE,IAAI,CAAC/B,KAAK,CAACD,kBAAmB;QACzCuC,QAAQ,EAAE,IAAI,CAACC;MAAuB,CACvC,CAEW,CAAC;IACf,CACH,CACc,CACL,CAAC,eACf3D,KAAA,CAAA0C,aAAA,CAACvC,YAAY;MAAC8C,EAAE,EAAC,oBAAoB;MAAC,mBAAgB;IAAe,gBACnEjD,KAAA,CAAA0C,aAAA,CAACtC,eAAe,qBACdJ,KAAA,CAAA0C,aAAA,CAACpC,iBAAiB;MAChBsC,aAAa,EAAE,cACb5C,KAAA,CAAA0C,aAAA,CAACrC,YAAY;QAACsC,GAAG,EAAC,mBAAmB;QAACO,KAAK,EAAE;MAAE,gBAC7ClD,KAAA,CAAA0C,aAAA,8BAAQ1C,KAAA,CAAA0C,aAAA,CAACjC,GAAG;QAACoC,MAAM,EAAC;MAAM,CAAE,CAAS,CACzB,CAAC,eACf7C,KAAA,CAAA0C,aAAA,CAACrC,YAAY;QAACsC,GAAG,EAAC,mBAAmB;QAACO,KAAK,EAAE;MAAE,gBAC7ClD,KAAA,CAAA0C,aAAA,8BAAQ1C,KAAA,CAAA0C,aAAA,CAACjC,GAAG;QAACoC,MAAM,EAAC;MAAM,CAAE,CAAS,CACzB,CAAC,eACf7C,KAAA,CAAA0C,aAAA,CAACrC,YAAY;QAACsC,GAAG,EAAC,gCAAgC;QAACO,KAAK,EAAE;MAAE,gBAC1DlD,KAAA,CAAA0C,aAAA,8BAAQ1C,KAAA,CAAA0C,aAAA,CAACjC,GAAG;QAACoC,MAAM,EAAC;MAAkB,CAAE,CAAS,CACrC,CAAC;IACf,CACH,CACc,CACL,CAAC,EACd,IAAI,CAACzB,KAAK,CAACC,MAAM,CAACuC,MAAM,KAAK,CAAC,GAC3B,IAAI,CAACnB,UAAU,CAAC,CAAC,GAChB,IAAI,CAACrB,KAAK,CAACD,kBAAkB,GAAG,IAAI,CAACC,KAAK,CAACE,YAAY,CAACO,GAAG,CAAC,CAACkB,KAAY,EAAEC,QAAgB,KAC5F,IAAI,CAACF,eAAe,CAACC,KAAK,EAAEC,QAAQ,CACtC,CAAC,GAAG,IAAI,CAAC5B,KAAK,CAACC,MAAM,CAACQ,GAAG,CAAC,CAACkB,KAAY,EAAEC,QAAgB,KACvD,IAAI,CAACF,eAAe,CAACC,KAAK,EAAEC,QAAQ,CAAC,CACjC,CACC,CAAC;EAElB;AACF;AAACjC,eAAA,CAxIYL,UAAU,iBACAF,qBAAqB;AAuI3C"}