{"version":3,"file":"Msg.js","names":["React","Msg","Component","constructor","props","render","children","localizeWithChildren","msgKey","createElement","Fragment","localize","params","message","l18nMsg","processKey","parts","split","count","Children","map","child","i","undefined","length","forEach","value","index","processParam","replace","startsWith","endsWith","substring","param","key"],"sources":["../../src/app/widgets/Msg.tsx"],"sourcesContent":["/*\r\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\ndeclare const l18nMsg: {[key: string]: string};\r\n\r\nexport interface MsgProps {\r\n    readonly msgKey: string;\r\n    readonly params?: string[];\r\n}\r\n\r\nexport class Msg extends React.Component<MsgProps> {\r\n\r\n    public constructor(props: MsgProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        if (this.props.children) {\r\n            return Msg.localizeWithChildren(this.props.msgKey, this.props.children);\r\n        }\r\n        return (\r\n            <React.Fragment>{Msg.localize(this.props.msgKey, this.props.params)}</React.Fragment>\r\n        );\r\n    }\r\n\r\n    private static localizeWithChildren(msgKey: string, children: React.ReactNode): React.ReactNode {\r\n        const message: string = l18nMsg[this.processKey(msgKey)];\r\n        const parts = message.split(/\\{\\{param_\\d*}}/);\r\n        const count = React.Children.count(children);\r\n        return React.Children.map(children, (child, i) =>\r\n            [parts[i], child, count === i + 1 ? parts[count] : '']\r\n        );\r\n    }\r\n\r\n    public static localize(msgKey: string, params?: string[]): string {\r\n        let message: string = l18nMsg[this.processKey(msgKey)];\r\n        if (message === undefined) message = msgKey;\r\n\r\n        if ((params !== undefined) && (params.length > 0)) {\r\n            params.forEach((value: string, index: number) => {\r\n                value = this.processParam(value);\r\n                message = message.replace('{{param_'+ index + '}}', value);\r\n            })\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    // if the message key has Freemarker syntax, remove it\r\n    private static processKey(msgKey: string): string {\r\n        if (!(msgKey.startsWith('${') && msgKey.endsWith('}'))) return msgKey;\r\n\r\n        // remove Freemarker syntax\r\n        return msgKey.substring(2, msgKey.length - 1);\r\n    }\r\n\r\n    // if the param has Freemarker syntax, try to look up its value\r\n    private static processParam(param: string): string {\r\n        if (!(param.startsWith('${') && param.endsWith('}'))) return param;\r\n\r\n        // remove Freemarker syntax\r\n        const key: string = param.substring(2, param.length - 1);\r\n\r\n        let value: string = l18nMsg[key];\r\n        if (value === undefined) return param;\r\n\r\n        return value;\r\n    }\r\n}\r\n"],"mappings":"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"}