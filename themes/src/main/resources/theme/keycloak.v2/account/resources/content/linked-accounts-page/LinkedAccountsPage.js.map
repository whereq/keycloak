{"version":3,"file":"LinkedAccountsPage.js","names":["React","withRouter","Button","DataList","DataListAction","DataListItemCells","DataListCell","DataListItemRow","Label","PageSection","PageSectionVariants","Split","SplitItem","Stack","StackItem","Title","DataListItem","BitbucketIcon","CubeIcon","GitlabIcon","LinkIcon","OpenshiftIcon","PaypalIcon","UnlinkIcon","FacebookIcon","GoogleIcon","InstagramIcon","MicrosoftIcon","TwitterIcon","StackOverflowIcon","LinkedinIcon","GithubIcon","AccountServiceContext","Msg","ContentPage","createRedirect","LinkedAccountsPage","Component","constructor","props","context","_defineProperty","state","linkedAccounts","unLinkedAccounts","getLinkedAccounts","doGet","then","response","console","log","data","filter","account","connected","setState","unLinkAccount","url","providerName","doDelete","linkAccount","redirectUri","location","pathname","params","providerId","window","href","accountLinkUri","render","createElement","title","localize","introMessage","isFilled","variant","light","hasGutter","headingLevel","className","size","msgKey","id","makeRows","emptyRow","isLinked","isEmptyMessage","key","dataListCells","accounts","length","Fragment","map","providerAlias","findIcon","displayName","label","width","linkedUsername","onClick","social","color","socialIconId","toLowerCase","includes","LinkedAccountsPagewithRouter"],"sources":["../../../src/app/content/linked-accounts-page/LinkedAccountsPage.tsx"],"sourcesContent":["/*\r\n * Copyright 2019 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\r\n\r\nimport {\r\n    Button,\r\n    DataList,\r\n    DataListAction,\r\n    DataListItemCells,\r\n    DataListCell,\r\n    DataListItemRow,\r\n    Label,\r\n    PageSection,\r\n    PageSectionVariants,\r\n    Split,\r\n    SplitItem,\r\n    Stack,\r\n    StackItem,\r\n    Title,\r\n    DataListItem,\r\n} from '@patternfly/react-core';\r\n\r\nimport {\r\n    BitbucketIcon,\r\n    CubeIcon,\r\n    GitlabIcon,\r\n    LinkIcon,\r\n    OpenshiftIcon,\r\n    PaypalIcon,\r\n    UnlinkIcon,\r\n    FacebookIcon,\r\n    GoogleIcon,\r\n    InstagramIcon,\r\n    MicrosoftIcon,\r\n    TwitterIcon,\r\n    StackOverflowIcon,\r\n    LinkedinIcon,\r\n    GithubIcon\r\n} from '@patternfly/react-icons';\r\n\r\nimport {HttpResponse} from '../../account-service/account.service';\r\nimport {AccountServiceContext} from '../../account-service/AccountServiceContext';\r\nimport {Msg} from '../../widgets/Msg';\r\nimport {ContentPage} from '../ContentPage';\r\nimport {createRedirect} from '../../util/RedirectUri';\r\n\r\ninterface LinkedAccount {\r\n    connected: boolean;\r\n    social: boolean;\r\n    providerAlias: string;\r\n    providerName: string;\r\n    displayName: string;\r\n    linkedUsername: string;\r\n}\r\n\r\ninterface LinkedAccountsPageProps extends RouteComponentProps {\r\n}\r\n\r\ninterface LinkedAccountsPageState {\r\n    linkedAccounts: LinkedAccount[];\r\n    unLinkedAccounts: LinkedAccount[];\r\n}\r\n\r\n/**\r\n * @author Stan Silvert\r\n */\r\nclass LinkedAccountsPage extends React.Component<LinkedAccountsPageProps, LinkedAccountsPageState> {\r\n    static contextType = AccountServiceContext;\r\n    context: React.ContextType<typeof AccountServiceContext>;\r\n\r\n    public constructor(props: LinkedAccountsPageProps, context: React.ContextType<typeof AccountServiceContext>) {\r\n        super(props);\r\n        this.context = context;\r\n\r\n        this.state = {\r\n            linkedAccounts: [],\r\n            unLinkedAccounts: []\r\n        }\r\n\r\n        this.getLinkedAccounts();\r\n    }\r\n\r\n    private getLinkedAccounts(): void {\r\n        this.context!.doGet<LinkedAccount[]>(\"/linked-accounts\")\r\n            .then((response: HttpResponse<LinkedAccount[]>) => {\r\n                console.log({response});\r\n                const linkedAccounts = response.data!.filter((account) => account.connected);\r\n                const unLinkedAccounts = response.data!.filter((account) => !account.connected);\r\n                this.setState({linkedAccounts: linkedAccounts, unLinkedAccounts: unLinkedAccounts});\r\n            });\r\n    }\r\n\r\n    private unLinkAccount(account: LinkedAccount): void {\r\n        const url = '/linked-accounts/' + account.providerName;\r\n\r\n        this.context!.doDelete<void>(url)\r\n            .then((response: HttpResponse<void>) => {\r\n                console.log({response});\r\n                this.getLinkedAccounts();\r\n            });\r\n    }\r\n\r\n    private linkAccount(account: LinkedAccount): void {\r\n        const url = '/linked-accounts/' + account.providerName;\r\n\r\n        const redirectUri: string = createRedirect(this.props.location.pathname);\r\n\r\n        this.context!.doGet<{accountLinkUri: string}>(url, { params: {providerId: account.providerName, redirectUri}})\r\n            .then((response: HttpResponse<{accountLinkUri: string}>) => {\r\n                console.log({response});\r\n                window.location.href = response.data!.accountLinkUri;\r\n            });\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n\r\n        return (\r\n            <ContentPage title={Msg.localize('linkedAccountsTitle')} introMessage={Msg.localize('linkedAccountsIntroMessage')}>\r\n                <PageSection isFilled variant={PageSectionVariants.light}>\r\n                    <Stack hasGutter>\r\n                        <StackItem>\r\n                            <Title headingLevel=\"h2\" className=\"pf-u-mb-lg\" size='xl'>\r\n                                <Msg msgKey='linkedLoginProviders'/>\r\n                            </Title>\r\n                            <DataList id=\"linked-idps\" aria-label={Msg.localize('linkedLoginProviders')}>\r\n                                {this.makeRows(this.state.linkedAccounts, true)}\r\n                            </DataList>\r\n                        </StackItem>\r\n                        <StackItem>\r\n                            <Title headingLevel=\"h2\" className=\"pf-u-mt-xl pf-u-mb-lg\" size='xl'>\r\n                                <Msg msgKey='unlinkedLoginProviders'/>\r\n                            </Title>\r\n                            <DataList id=\"unlinked-idps\" aria-label={Msg.localize('unlinkedLoginProviders')}>\r\n                                {this.makeRows(this.state.unLinkedAccounts, false)}\r\n                            </DataList>\r\n                        </StackItem>\r\n                    </Stack>\r\n                </PageSection>\r\n            </ContentPage>\r\n        );\r\n    }\r\n\r\n    private emptyRow(isLinked: boolean): React.ReactNode {\r\n        let isEmptyMessage = '';\r\n        if (isLinked) {\r\n            isEmptyMessage = Msg.localize('linkedEmpty');\r\n        } else {\r\n            isEmptyMessage = Msg.localize('unlinkedEmpty');\r\n        }\r\n\r\n        return (\r\n            <DataListItem key='emptyItem' aria-labelledby={Msg.localize('isEmptyMessage')}>\r\n                <DataListItemRow key='emptyRow'>\r\n                    <DataListItemCells dataListCells={[\r\n                        <DataListCell key='empty'>{isEmptyMessage}</DataListCell>\r\n                    ]}/>\r\n                </DataListItemRow>\r\n            </DataListItem>\r\n        )\r\n    }\r\n\r\n    private makeRows(accounts: LinkedAccount[], isLinked: boolean): React.ReactNode {\r\n        if (accounts.length === 0) {\r\n            return this.emptyRow(isLinked);\r\n        }\r\n\r\n        return (\r\n            <> {\r\n\r\n                accounts.map( (account: LinkedAccount) => (\r\n                    <DataListItem id={`${account.providerAlias}-idp`} key={account.providerName} aria-labelledby={Msg.localize('linkedAccountsTitle')}>\r\n                        <DataListItemRow key={account.providerName}>\r\n                            <DataListItemCells\r\n                                dataListCells={[\r\n                                    <DataListCell key='idp'>\r\n                                        <Split>\r\n                                            <SplitItem className=\"pf-u-mr-sm\">{this.findIcon(account)}</SplitItem>\r\n                                            <SplitItem className=\"pf-u-my-xs\" isFilled><span id={`${account.providerAlias}-idp-name`}>{account.displayName}</span></SplitItem>\r\n                                        </Split>\r\n                                    </DataListCell>,\r\n                                    <DataListCell key='label'>\r\n                                        <Split>\r\n                                            <SplitItem className=\"pf-u-my-xs\" isFilled><span id={`${account.providerAlias}-idp-label`}>{this.label(account)}</span></SplitItem>\r\n                                        </Split>\r\n                                    </DataListCell>,\r\n                                    <DataListCell key='username' width={5}>\r\n                                        <Split>\r\n                                            <SplitItem className=\"pf-u-my-xs\" isFilled><span id={`${account.providerAlias}-idp-username`}>{account.linkedUsername}</span></SplitItem>\r\n                                        </Split>\r\n                                    </DataListCell>,\r\n                                ]}/>\r\n                            <DataListAction aria-labelledby={Msg.localize('link')} aria-label={Msg.localize('unLink')} id='setPasswordAction'>\r\n                                {isLinked && <Button id={`${account.providerAlias}-idp-unlink`} variant='link' onClick={() => this.unLinkAccount(account)}><UnlinkIcon size='sm'/> <Msg msgKey='unLink'/></Button>}\r\n                                {!isLinked && <Button id={`${account.providerAlias}-idp-link`} variant='link' onClick={() => this.linkAccount(account)}><LinkIcon size='sm'/> <Msg msgKey='link'/></Button>}\r\n                            </DataListAction>\r\n                        </DataListItemRow>\r\n                    </DataListItem>\r\n                ))\r\n\r\n            } </>\r\n\r\n        )\r\n    }\r\n\r\n    private label(account: LinkedAccount): React.ReactNode {\r\n        if (account.social) {\r\n            return (<Label color=\"blue\"><Msg msgKey='socialLogin'/></Label>);\r\n        }\r\n\r\n        return (<Label color=\"green\"><Msg msgKey='systemDefined'/></Label>);\r\n    }\r\n\r\n    private findIcon(account: LinkedAccount): React.ReactNode {\r\n      const socialIconId = `${account.providerAlias}-idp-icon-social`;\r\n      console.log(account);\r\n      switch (true) {\r\n        case account.providerName.toLowerCase().includes('linkedin'):\r\n          return <LinkedinIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('facebook'):\r\n          return <FacebookIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('google'):\r\n          return <GoogleIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('instagram'):\r\n          return <InstagramIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('microsoft'):\r\n          return <MicrosoftIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('bitbucket'):\r\n          return <BitbucketIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('twitter'):\r\n          return <TwitterIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('openshift'):\r\n          // return <div className=\"idp-icon-social\" id=\"openshift-idp-icon-social\" />;\r\n          return <OpenshiftIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('gitlab'):\r\n          return <GitlabIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('github'):\r\n          return <GithubIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('paypal'):\r\n          return <PaypalIcon id={socialIconId} size='lg'/>;\r\n        case account.providerName.toLowerCase().includes('stackoverflow'):\r\n          return <StackOverflowIcon id={socialIconId} size='lg'/>;\r\n        case (account.providerName !== '' && account.social):\r\n          return <div className=\"idp-icon-social\" id={socialIconId}/>;\r\n        default:\r\n          return <CubeIcon id={`${account.providerAlias}-idp-icon-default`} size='lg'/>;\r\n      }\r\n    }\r\n\r\n};\r\n\r\nconst LinkedAccountsPagewithRouter = withRouter(LinkedAccountsPage);\r\nexport {LinkedAccountsPagewithRouter as LinkedAccountsPage};\r\n"],"mappings":"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"}