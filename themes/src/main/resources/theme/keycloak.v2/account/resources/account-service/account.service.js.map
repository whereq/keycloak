{"version":3,"file":"account.service.js","names":["ContentAlert","AccountServiceError","Error","constructor","response","statusText","AccountServiceClient","keycloakService","_defineProperty","kcSvc","accountUrl","authServerUrl","realm","doGet","endpoint","config","doRequest","method","doDelete","doPost","body","JSON","stringify","doPut","fetch","makeUrl","toString","makeConfig","data","json","e","ok","handleError","status","authenticated","audiencePresent","window","location","href","baseUrl","login","err","danger","startsWith","URL","url","hasOwnProperty","params","Object","keys","forEach","key","searchParams","append","Promise","resolve","getToken","then","token","headers","Authorization","catch","addEventListener","event","promise","error","preventDefault"],"sources":["../../src/app/account-service/account.service.ts"],"sourcesContent":["/*\r\n * Copyright 2018 Red Hat Inc. and/or its affiliates and other contributors\r\n * as indicated by the @author tags. All rights reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\r\n * use this file except in compliance with the License. You may obtain a copy of\r\n * the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\r\n\r\nimport {KeycloakService} from '../keycloak-service/keycloak.service';\r\nimport {ContentAlert} from '../content/ContentAlert';\r\n\r\ndeclare const baseUrl: string;\r\n\r\ntype ConfigResolve = (config: RequestInit) => void;\r\n\r\nexport interface HttpResponse<T = unknown> extends Response {\r\n    data?: T;\r\n}\r\n\r\nexport interface RequestInitWithParams extends RequestInit {\r\n    params?: {[name: string]: string | number};\r\n}\r\n\r\nexport class AccountServiceError extends Error {\r\n    constructor(public response: HttpResponse) {\r\n        super(response.statusText);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @author Stan Silvert ssilvert@redhat.com (C) 2018 Red Hat Inc.\r\n */\r\nexport class AccountServiceClient {\r\n    private kcSvc: KeycloakService;\r\n    private accountUrl: string;\r\n\r\n    public constructor(keycloakService: KeycloakService) {\r\n        this.kcSvc = keycloakService;\r\n        this.accountUrl = this.kcSvc.authServerUrl() + 'realms/' + this.kcSvc.realm() + '/account';\r\n    }\r\n\r\n    public async doGet<T>(endpoint: string,\r\n                          config?: RequestInitWithParams): Promise<HttpResponse<T>> {\r\n        return this.doRequest(endpoint, {...config, method: 'get'});\r\n    }\r\n\r\n    public async doDelete<T>(endpoint: string,\r\n                            config?: RequestInitWithParams): Promise<HttpResponse<T>> {\r\n        return this.doRequest(endpoint, {...config, method: 'delete'});\r\n    }\r\n\r\n    public async doPost<T>(endpoint: string,\r\n                          body: string | {},\r\n                          config?: RequestInitWithParams): Promise<HttpResponse<T>> {\r\n        return this.doRequest(endpoint, {...config, body: JSON.stringify(body), method: 'post'});\r\n    }\r\n\r\n    public async doPut<T>(endpoint: string,\r\n                         body: string | {},\r\n                         config?: RequestInitWithParams): Promise<HttpResponse<T>> {\r\n        return this.doRequest(endpoint, {...config, body: JSON.stringify(body), method: 'put'});\r\n    }\r\n\r\n    public async doRequest<T>(endpoint: string,\r\n                              config?: RequestInitWithParams): Promise<HttpResponse<T>> {\r\n\r\n        const response: HttpResponse<T> = await fetch(this.makeUrl(endpoint, config).toString(),\r\n                                                      await this.makeConfig(config));\r\n\r\n        try {\r\n            response.data = await response.json();\r\n        } catch (e) {} // ignore.  Might be empty\r\n\r\n        if (!response.ok) {\r\n            this.handleError(response);\r\n            throw new AccountServiceError(response);\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    private handleError(response: HttpResponse): void {\r\n        if (response !== null && response.status === 401) {\r\n            if (this.kcSvc.authenticated() && !this.kcSvc.audiencePresent()) {\r\n                // authenticated and the audience is not present => not allowed\r\n                window.location.href = baseUrl + '#/forbidden';\r\n            } else {\r\n                // session timed out?\r\n                this.kcSvc.login();\r\n            }\r\n        }\r\n\r\n        if (response !== null && response.status === 403) {\r\n            window.location.href = baseUrl + '#/forbidden';\r\n        }\r\n\r\n        if (response !== null && response.data != null) {\r\n            if (response.data['errors'] != null) {\r\n                for(let err of response.data['errors'])\r\n                    ContentAlert.danger(err['errorMessage'], err['params']);\r\n            } else {\r\n                ContentAlert.danger(\r\n                `${response.statusText}: ${response.data['errorMessage'] ? response.data['errorMessage'] : ''} ${response.data['error'] ? response.data['error'] : ''}`);\r\n            };\r\n        } else {\r\n            ContentAlert.danger(response.statusText);\r\n        }\r\n    }\r\n\r\n    private makeUrl(endpoint: string, config?: RequestInitWithParams): URL {\r\n        if (endpoint.startsWith('http')) return new URL(endpoint);\r\n        const url = new URL(this.accountUrl + endpoint);\r\n\r\n        // add request params\r\n        if (config && config.hasOwnProperty('params')) {\r\n            const params: {[name: string]: string} = config.params as {} || {};\r\n            Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    private makeConfig(config: RequestInit = {}): Promise<RequestInit> {\r\n        return new Promise( (resolve: ConfigResolve) => {\r\n            this.kcSvc.getToken()\r\n                .then( (token: string) => {\r\n                    resolve( {\r\n                        ...config,\r\n                        headers: {'Content-Type': 'application/json',\r\n                                 ...config.headers,\r\n                                  Authorization: 'Bearer ' + token}\r\n                    });\r\n                }).catch(() => {\r\n                    this.kcSvc.login();\r\n                });\r\n        });\r\n    }\r\n\r\n}\r\n\r\nwindow.addEventListener(\"unhandledrejection\", (event: PromiseRejectionEvent) => {\r\n    event.promise.catch(error => {\r\n        if (error instanceof AccountServiceError) {\r\n            // We already handled the error. Ignore unhandled rejection.\r\n            event.preventDefault();\r\n        }\r\n    });\r\n});\r\n"],"mappings":"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"}